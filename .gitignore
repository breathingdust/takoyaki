## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/

# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# DNX
project.lock.json
artifacts/

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.ncb
*.pch
*.pdb
*.pgc
*.pgd
*.suo
*.sbr
*.tlb
*.tli
*.tlh
*.bak
*.[Cc]ache
*.ilk
*.log
*.vspscc
*.vssscc
.builds
*.lib
*.svclog
*.sbr
*.sdf
# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
.vs/
obj/
[Bb]in
*.opensdf
*.sdf
*.cachefile
[Dd]ebug*/
# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap
[Rr]elease*/
# TFS 2012 Local Workspace
$tf/
Ankh.NoLoad

*.gpState
#Tooling
# ReSharper is a .NET coding add-in
_ReSharper*/
*.resharper
*.DotSettings.user
[Tt]est[Rr]esult*
# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*
#Project files
# DotCover is a Code Coverage Tool
*.dotCover
[Bb]uild/
# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/
#Subversion files
# Web workbench (sass)
.sass-cache/
.svn
# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html
# Office Temp Files
# Click-Once directory
publish/
~$*
# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings 
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

#NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
packages/
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
!packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef
# Enable "build/" folder in the NuGet Packages folder since NuGet packages use it for MSBuild targets
# Microsoft Azure Emulator
ecf/
rcf/
!packages/*/build/
# Microsoft Azure ApplicationInsights config file
ApplicationInsights.config

# Windows Store app package directory
AppPackages/
BundleArtifacts/
#log4net logs
# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/
*.log.*
# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/
orleans.codegen.cs

# RIA/Silverlight projects
Generated_Code/
*.orig
# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# Oracle SQL Temp Files
*.mdf
*.~sql

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
#node.js
# Microsoft Fakes
FakesAssemblies/
node_modules
# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg
appSettings.local
# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe

# FAKE - F# Make
.fake/
